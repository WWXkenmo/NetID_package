% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FateCausal.R
\name{FateCausal}
\alias{FateCausal}
\title{Run NetID Model}
\usage{
FateCausal(
  dyn.out,
  L = 30,
  alpha = 0,
  lambda = 100,
  cutoff = 0.25,
  weight = 0.2,
  redirected = FALSE,
  fate_method = "palantir",
  restart = TRUE,
  n.cores = 8,
  work_dir = NULL
)
}
\arguments{
\item{dyn.out}{The output of NetID.}

\item{L}{The number of lags to utilize.
Default: 30.}

\item{alpha}{Use Ridge regression (0) or Lasso regression (1).
Default: 0.}

\item{lambda}{Regularization parameter.
Default: 100.}

\item{cutoff}{When using velocity-aided GRN construction, FateCausal converts scaled velocity values > |cutoff| or < -|cutoff| into 1 and 0 to denote induction or repression. Lagged gene expression is used to predict the induction or repression state.}

\item{weight}{The final GRN is defined as (1-w)*Granger_coefficient + w*GENIE3_coefficient if aggre_method = "manual".
Default: 0.2.}

\item{redirected}{Re-estimate the causal direction through Granger causal test.
Default: FALSE.}

\item{fate_method}{Specify which fate probability to use, "cellrank" or "palantir".
Default: "palantir".}

\item{restart}{Re-estimate the GRN.
Default: TRUE.}

\item{n.cores}{The number of cores.
Default: 8.}

\item{work_dir}{Users can specify the working directory by inputting the address, and the inferred GRN will be saved in this directory. Otherwise, the local working directory will be used (getwd()).
Default: NULL.}

\item{aggre_method}{Use the aggregation method "RobustRankAggreg", "SUMMA", or "manual". If using "manual", specify the weight parameter.}

\item{GRN}{A list of cell-fate specific GRNs.}

\item{coef}{A list of Granger causal correlation matrices.}
}
\value{
A list containing the following objects:
}
\description{
This function generates the cell-fate specific weighted gene regulatory network (GRN). FateCausal learns the Granger causality using fate probability to order gene expression, based on the GRN skeleton.
}
\examples{
\dontrun{
GRN.filter <- FateCausal(dyn.out, velo_infor = FALSE, L = 80, alpha = 0, weight = 0.8, lambda = 100, aggre_method = "RobustRankAggreg", restart = TRUE)
}

}
