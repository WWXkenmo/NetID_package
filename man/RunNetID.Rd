% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RunNetID.R
\name{RunNetID}
\alias{RunNetID}
\title{Run NetID Model}
\usage{
RunNetID(
  sce,
  min_counts = 10,
  varID_res = NULL,
  knn = 30,
  regulators = NULL,
  targets = NULL,
  netID_params = list(),
  velo = TRUE,
  dynamicInfer = TRUE,
  maxState = 5,
  cut_off = 2,
  work_dir = NULL,
  no_cores = NULL
)
}
\arguments{
\item{sce}{A SingleCellExperiment object that needs to contain the "count" assay. If it also contains the "spliced" and "unspliced" assays, NetID will run on the "spliced" assay.}

\item{min_counts}{Minimum detected counts for genes. Genes with counts > min_counts will be preserved.
Default: 10.}

\item{varID_res}{A varID object generated by pruneKnn.}

\item{knn}{Number of nearest neighbors.
Default: 30.}

\item{regulators}{A gene list containing the feature names of regulators.}

\item{targets}{A gene list containing the feature names of targets.}

\item{netID_params}{A list object that can manually set the parameters for the core algorithm of NetID. Refer to the details of parameters using ?check_netID_params.}

\item{velo}{If using fate probability inferred results from RNA velocity based method (cellrank), make sure you have run the FateDynamic function before setting this parameter to TRUE.
Default: FALSE.}

\item{dynamicInfer}{If using the fate probability inferred results, make sure you have run the FateDynamic function before setting this parameter to TRUE.
Default: FALSE.}

\item{maxState}{NetID assigns cells to cell fates (lineages) by clustering the cells according to fate probability. Internally, NetID uses Gaussian Mixture Model and BIC to choose the optimal number of clusters. User needs to set the maximum number of clusters.
Default: 5.}

\item{cut_off}{Each cluster is assigned to a cell fate by comparing fate probability fold change (e.g. cell fate A vs. others). A cell fate with fold change > cut_off is assigned to the corresponding cluster.
Default: 2.}

\item{work_dir}{Users can specify the working directory by inputting the address, and the varID object (pruneKnn) will be saved in this directory. Otherwise, the local working directory will be used (getwd()).
Default: NULL.}

\item{no_cores}{The number of cores to be used. Default: NULL.}

\item{unique_assign}{If uniquely assigning the cell fate to each cluster.
Default: FALSE.}

\item{restart}{RunNetID will automatically run pruneKnn if it can't find the VarID_res.rds in the working directory. If VarID_res.rds already exists and the user still wants to re-run pruneKnn, set restart = TRUE.
Default: FALSE.}

\item{fate_prob}{Cell fate probability matrix learned by palantir, saved only when dynamicInfer = TRUE.}

\item{LineageClass}{The assignment of lineage type to each cell. The palantir fate probability matrix is used for assignment.}

\item{fate_prob_velo}{Cell fate probability matrix learned by palantir, saved only when dynamicInfer = TRUE.}

\item{LineageClass_velo}{The assignment of lineage type to each cell. The cellrank fate probability matrix is used for assignment.}

\item{pseudotime}{The pseudotime for each cell, learned by palantir.}

\item{velocity_pseudotime}{The pseudotime for each cell, learned by RNA velocity (scVelo).}

\item{GEP}{NetID inferred aggregated profile on the sampling dataset. Users can manually choose their GRN inference method and run it on this expression profile.}

\item{velo_m}{and velo_m_aggregate
The velocity matrix.}

\item{skeleton}{A gene regulatory network skeleton (a binary matrix with 1 indicating regulation).}

\item{var}{If using variable gene to calculate principal components, used by geosketch method. Default: FALSE.}

\item{sampled_cells}{The barcode or ID of sampled cells.}

\item{sketch.method}{Perform sketching sampling on single cell datasets: "geosketch" or "SeuratSketching".}

\item{ndim}{Dimensions of PCs, used by geosketch method. Default: 30.}

\item{n_cell}{The number of sampled cells. Default: 500.}

\item{Threshold_Num}{The minimum number of nearest neighbors of each seed cell after assignments. Default: 2.}

\item{normalize}{If performing normalization to the count matrix. Default: FALSE.}

\item{prior_net}{A binary matrix indicating the prior knowledge of gene regulation, where rows are regulators and columns are targets.}
}
\value{
A list containing the following objects:
}
\description{
This function generates the weighted gene regulatory network (GRN) using the NetID algorithm. NetID first samples the cells on the PCA space to ensure coverage of the whole manifold. It then aggregates the neighborhoods around each sampled cell on the pruned KNN graph. Finally, the GENIE3 algorithm is run on the aggregated gene expression profiles. The sampling and rational aggregation help denoise cells, maintain major variation, and speed up the GRN generation process.

A check function for the RunNetID function. RunNetID provides netID_params; users can specify the desired parameters, which are listed as follows:
}
\examples{
\dontrun{
dyn.out <- RunNetID(sce, regulators = TF, targets = TF, netID_params = list(normalize = FALSE, n_cell = 5000), velo = FALSE, dynamicInfer = FALSE)
}

}
